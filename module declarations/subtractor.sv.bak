//// this module performs the subtraction: Ain - Bin
module subtractor(Ain, Bin, Cin, Cout, out);
	input logic Ain, Bin, Cin;
	output logic Cout, out;
	logic [2:0] in; //all three inputs sythesized into a 3 bits
	logic [7:0] decoded;
	logic B;
	
	assign B = Bin ^ 1;
	assign in = {Ain, B, Cin};
	
	decoder m(.out(decoded), .in(in), .enable(1'b1));
	
	always_comb begin
		case(decoded)
			decoded[0]: Cout = 	1'b1;
	      decoded[1]: out = 	1'b1;
	      decoded[2]: out = 	1'b1;
         decoded[3]: Cout = 	1'b1;
	      decoded[4]: out = 	1'b1;
	      decoded[5]: Cout = 	1'b1;
	      decoded[6]: Cout = 	1'b1;
	      decoded[7]: out = 	1'b1;
		default begin
			Cout = 	1'b0;
			out = 	1'b0;
		end
		endcase
	end
	
	
	endmodule
	
	
	
	
module subtractor_testbench();
	logic Ain, Bin, Cin;
	logic Cout, out;

 subtractor dut (.Ain, .Bin, .Cin, .Cout, .out);

 initial begin
 Ain=0; Bin=0; Cin=0; #10;
 Ain=0; Bin=0; Cin=1; #10;
 Ain=0; Bin=1; Cin=0; #10;
 Ain=0; Bin=1; Cin=1; #10;
 Ain=1; Bin=0; Cin=0; #10;
 Ain=1; Bin=0; Cin=1; #10;
 Ain=1; Bin=1; Cin=0; #10;
 Ain=1; Bin=1; Cin=1; #10;
 end
endmodule 
